{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","_this","this","props","songs","map","song","react_default","a","createElement","className","key","title","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","_ref","duration","App","components_SongList","components_SongDetail","combineReducers","arguments","length","undefined","action","ReactDOM","render","es","store","createStore","reducers","components_App","document","getElementById"],"mappings":"0NAIMA,uLACS,IAAAC,EAAAC,KACX,OAAOA,KAAKC,MAAMC,MAAMC,IAAI,SAACC,GAC3B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,EAAKM,OAC9BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,oBACVG,QAAS,kBAAMZ,EAAKE,MAAMW,WAAWR,KAFvC,WAOFC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAKM,2CAOrC,OAAOL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBR,KAAKa,qBApB3BC,aA4BRC,cAJS,SAACC,GACvB,MAAO,CAAEd,MAAOc,EAAMd,QAGgB,CACtCU,WCjCwB,SAACR,GACzB,MAAO,CACLa,KAAM,gBACNC,QAASd,KD6BEW,CAEZjB,GEVYiB,cAJS,SAACC,GACvB,MAAO,CAAEZ,KAAMY,EAAMG,eAGRJ,CArBI,SAAAK,GAAc,IAAXhB,EAAWgB,EAAXhB,KACpB,OAAKA,EAIHC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,mBACUH,EAAKM,MACbL,EAAAC,EAAAC,cAAA,WAFF,aAGaH,EAAKiB,WARbhB,EAAAC,EAAAC,cAAA,8BCgBIe,mLAfX,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACgB,EAAD,OAEFlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACiB,EAAD,gBATMV,aCcHW,cAAgB,CAC7BvB,MAjBmB,WACnB,MAAO,CACL,CAAEQ,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,UAAWW,SAAU,QAC9B,CAAEX,MAAO,qBAAsBW,SAAU,UAc3CF,aAV0B,WAAiC,IAAhCA,EAAgCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,MAAoB,kBAAhBC,EAAOZ,KACFY,EAAOX,QAGTC,KCPTW,IAASC,OACP1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IACzB9B,EAAAC,EAAAC,cAAC6B,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.34e51056.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions';\n\nclass SongList extends Component {\n  renderList() {\n    return this.props.songs.map((song) => {\n      return (\n        <div className=\"item\" key={song.title}>\n          <div className=\"right floated content\">\n            <button\n              className=\"ui button primary\"\n              onClick={() => this.props.selectSong(song)}\n            >\n              Select\n            </button>\n          </div>\n          <div className=\"content\">{song.title}</div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { songs: state.songs };\n};\n\nexport default connect(mapStateToProps, {\n  selectSong\n})(SongList);\n","export const selectSong = (song) => {\n  return {\n    type: 'SONG_SELECTED',\n    payload: song\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SongDetail = ({ song }) => {\n  if (!song) {\n    return <div>Select a song</div>;\n  }\n  return (\n    <div>\n      <h3>Detail for:</h3>\n      <p>\n        Title: {song.title}\n        <br/>\n        Duration: {song.duration}\n      </p>\n\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { song: state.selectedSong };\n}\n\nexport default connect(mapStateToProps)(SongDetail);\n","import React, { Component } from 'react';\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"ui container grid\">\n        <div className=\"ui row\">\n          <div className=\"column eight wide\">\n            <SongList />\n          </div>\n          <div className=\"column eight wide\">\n            <SongDetail />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst songsReducer = () => {\n  return [\n    { title: 'no Scrubs', duration: '4:05' },\n    { title: 'marrana', duration: '2:30' },\n    { title: 'i want it that way', duration: '1:45' }\n  ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload;\n  }\n\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSong: selectedSongReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}